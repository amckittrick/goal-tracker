"""Added encouragement table

Revision ID: 3cced2940039
Revises: 371d9b415c77
Create Date: 2025-04-15 16:52:00.654285

"""

import os
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "3cced2940039"
down_revision: Union[str, None] = "371d9b415c77"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    encouragement_table = sa.sql.table(
        "encouragement",
        sa.Column("id", sa.Integer),
        sa.Column("quote", sa.String),
        sa.Column("author", sa.String),
    )
    op.create_table(
        "encouragement",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("quote", sa.String(length=256), nullable=False),
        sa.Column("author", sa.String(length=64), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        if_not_exists=True
    )

    with open(os.path.join(os.getcwd(), "backend", "quotes.txt")) as quotes_file:
        quotes = []
        for line in quotes_file.readlines():
            line = line.strip()
            if not line.startswith("#"):
                quote, author = line.rsplit("-", 1)
                quotes.append({"quote": quote.strip(), "author": author.strip()})
        op.bulk_insert(encouragement_table, quotes)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("encouragement")
    # ### end Alembic commands ###
